spring.application.name=urbia

#Conecion BD
spring.datasource.url=${FINAL_JDBC_DATABASE_URL}
spring.datasource.username=${FINAL_JDBC_DATABASE_USERNAME}
spring.datasource.password=${FINAL_JDBC_DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuracion de JPA/Hibernate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Configuracion AWS S3
aws.s3.bucketName=urbia-imagenes
aws.s3.accessKey=${S3_KEY}
aws.s3.secretKey=${S3_SECRETKEY}
aws.s3.region=us-east-2

gemini.api.url=https://generativelanguage.googleapis.com
gemini.api.key=AIzaSyBRTEylJoZCaJXxJDpL9DDSVA0ryTGhVQc
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

cors.allowed-origins=*
jwt.secret=tu_secreto_super_seguro
jwt.expiration=86400000

# Configuración de OAuth2 para Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLEMAIL_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLEMAIL_CLIENT}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
#spring.security.oauth2.client.registration.google.redirect-uri=https://handsome-wisdom-production.up.railway.app/login/oauth2/code/google
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
